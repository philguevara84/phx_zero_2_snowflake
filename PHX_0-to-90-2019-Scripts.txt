    -- BELOW VARIABLES WILL HELP YOU EASILY ASSOCIATE YOUR OBJECTS BY USING YOUR SNOWFLAKE USERID
        SET Current_User = CURRENT_USER();
        SET Current_DB = 'PHX_0_TO_90_2019'; 
        SET Current_schema = 'BATCH_' || $Current_User; 
        SET Current_FF = 'FF_CSV_' || $Current_User;
        SET Current_FF_JSON = 'FF_JSON_' || $Current_User;
        SET Current_WH = 'DEMO_WH';
        SET Current_Role = CURRENT_ROLE();

-- Create a new schema.. eg. BATCH_RICKYSHARMA
        Create or Replace Schema IDENTIFIER($Current_schema)   COMMENT = 'Test Schema for Snowflake 0 to 90 Training';
        USE Schema IDENTIFIER($Current_schema);

    -- Optional: Execute grants if user groups operate in different roles and need access to your data
        GRANT ALL ON Schema IDENTIFIER($Current_schema) TO ROLE IDENTIFIER($Current_Role);  
    
    GRANT ALL ON Schema IDENTIFIER($Current_schema) TO ROLE IDENTIFIER($Current_Role); 

    
    -- CREATE A NEW FILE FORMAT FOR LOADING CSV FILES THAT ARE TAB DELIMITED AND HAVE COLUMN HEADERS. 
    -- Eg: FF_CSV_PHOENIX_TRAINEE01
        CREATE OR REPLACE FILE FORMAT IDENTIFIER($Current_FF) TYPE = 'CSV' COMPRESSION = 'AUTO' FIELD_DELIMITER = '\t'
            RECORD_DELIMITER = '\n' SKIP_HEADER = 1 FIELD_OPTIONALLY_ENCLOSED_BY = 'NONE' TRIM_SPACE = TRUE 
            ERROR_ON_COLUMN_COUNT_MISMATCH = TRUE ESCAPE = 'NONE' ESCAPE_UNENCLOSED_FIELD = '\134' DATE_FORMAT = 'AUTO' 
            TIMESTAMP_FORMAT = 'AUTO' NULL_IF = ('\\N');

    -- CREATE A NEW TABLE FOR HOTEL TRANSACTIONS DATASET
      Create or Replace Table Hotel_Transactions  -- provide your table name here
          (
          key integer,
          total_bill decimal(10,2),
          tip decimal(10,2),
          sex varchar,
          smoker varchar,
          meal_day varchar,
          meal_type varchar,
          count integer
          );

-------------------------- DATA ANALYSIS ------------------------------------

    -- Query the Data
        Select * from Hotel_Transactions limit 100;

    -- Identify Average Bill Vs Avg. Tips
      Select 
        Avg(TOTAL_BILL) As Avg_Bill , 
        Avg(Tip) as Avg_Tip, 
        Avg_Tip / Avg_Bill * 100 As Percentage_Tip
        FROM  Hotel_Transactions;

    -- Analyze Maximum and Minimum tips Vs Bills for each Gender and Meal Type
      Select 
        Meal_type, sex, 
        max(TOTAL_BILL) As max_Total_bill,
        min(TOTAL_BILL) As min_Total_bill,
        max(TIP) As max_TIP,
        min(TIP) As min_TIP
        FROM  Hotel_Transactions Group by Meal_type, sex;
    

    -- Identify maximum Bill per meal day
      Select
          max(total_bill) as max_total_bill, meal_day
          FROM  Hotel_Transactions Group by meal_day order by max_total_bill desc; 



    ---------------------- EXPLORE UNIQUE SNOWFLAKE FEATURES ----------------------------
   
        -- Accidently DROP this table!!
          DROP table  Hotel_Transactions;

        -- Recover dropped table back
          UNDROP table Hotel_Transactions;
          Select * from Hotel_Transactions;


        -- Clone this table into a new table - without replicating data
          CREATE  TABLE Hotel_Transactions_NEW CLONE  Hotel_Transactions;
          Select * from Hotel_Transactions_NEW;

        -- Update Column Count by adding 5 to its current value
          Update  Hotel_Transactions Set Count = count + 5;
          Select * from Hotel_Transactions;

        -- Now, Use time travel feature to look at the previous state of this data.. 1 mins ago
          Select * from Hotel_Transactions at(offset => -60*1);


--===============================================================================
-- EXERCISE2: LAODING A SEMI-STRUCTURED (JSON) DATASET INTO SNOWFLAKE FOR ANALYSIS
--================================================================================

    -- Create File format for JSON Dataset
        CREATE FILE FORMAT IDENTIFIER($Current_FF_JSON) TYPE = 'JSON' COMPRESSION = 'AUTO' 
                ENABLE_OCTAL = FALSE ALLOW_DUPLICATE = FALSE STRIP_OUTER_ARRAY = FALSE STRIP_NULL_VALUES = TRUE IGNORE_UTF8_ERRORS = TRUE;
  
  
    /* Create a target table for the JSON data. */

      Create or replace table home_sales_json
      (col1 variant);
      
  
    -------------------------- DATA LOADING ------------------------------------

    -- OPTION 1: LOAD THE FILE FROM LOCAL TO SNOWFLAKE TABLE USING UI

    -- OPTION 2: LOAD THE FILE FORM STAGE INTO THE TABLE
      Copy into home_sales_temp from @PHX_0_TO_90_2019.TRAINING.nyc_0_to_90_training_2019_stage/sales.json
      file_format= $Current_FF_JSON;
  
  
  -- QUERY THE LOADED DATA (STILL JSON)
      Select * from home_sales_json
  
  
    -- USE A VIEW ACCESS DATA IN STRUCTURED FORMAT
       CREATE VIEW home_sales AS 
        select substr(col1:location.state_city,4) AS City, 
              substr(col1:location.state_city,1,2) AS State, 
              col1:location.zip AS Zip, 
              to_timestamp_ntz(col1:sale_date) AS Sale_Date, 
              col1:price AS Price
         From home_sales_json

 -- QUERY THE VIEW (Structured format)
       Select * from home_sales;



   

   
   